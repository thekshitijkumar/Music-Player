/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package musicplayer;

import jaco.mp3.player.MP3Player;
import java.io.File;
import java.io.*;
//import jaco.mp3.player.*;
import java.awt.Dimension;
import java.awt.Font;
import java.io.IOException;
import java.nio.file.Paths;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;
import javax.sound.sampled.FloatControl;
import javax.sound.sampled.Line;
import javax.sound.sampled.LineUnavailableException;
import javax.sound.sampled.Mixer;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JSlider;

/**
 *
 * @author Kshitij Kumar
 */
public class mp3player extends javax.swing.JFrame {

    /**
     * Creates new form mp3player
     */
    
    MP3Player player;//initialising pMP3 player
    File songFile;//for current song dile locayion
    String currentDir="home.user";//documents of current user current path for JFile chooser
    String currentPath;
    String imagePath;
    String appName="\t\tKshitij Music MP3 Player";
    boolean repeat=false;
    boolean windowCollapsed=false;
    int xMouse,yMouse;//for dragging stuff
    
    public mp3player() {                    //constructor
        initComponents();
        Integer object1 = null; 
        String filename="file.ser";
        try
        {    
            // Reading the object from a file 
            FileInputStream file = new FileInputStream(filename); 
            ObjectInputStream in = new ObjectInputStream(file); 
              
            // Method for deserialization of object 
            object1 = (Integer)in.readObject(); 
              
            in.close(); 
            file.close(); 
              
            System.out.println("Object has been deserialized "); 
            
            jSlider1.setValue((int)object1);
            volumeControl((double)(object1/100));
            
            
//            System.out.println("a = " + object1.a); 
//            System.out.println("b = " + object1.b); 
        } 
          
        catch(IOException ex) 
        { 
            System.out.println("IOException is caught"); 
        } 
          
        catch(ClassNotFoundException ex) 
        { 
            System.out.println("ClassNotFoundException is caught"); 
        } 
        
        
        
        
        
        
        
        
        
        
        appTitle.setText(appName);
        songFile=new File("F:\\Drive2\\Songs\\religious\\Hanuman Chaalisa\\Track No01.mp3");      //default location of mp3 file
        String fileName=songFile.getName();//get file name into new string
        songName.setText(fileName);//name of song being played value in label
        player=mp3Player();
        player.addToPlayList(songFile);         //added to playlist
        currentPath=Paths.get(".").toAbsolutePath().normalize().toString();//getting current path normalising removing redundat details and then convertin to strign
       //System.out.println(currentPath);
        imagePath="\\src\\musicplayer\\music player icon";
        
       // volumeControl(0.4);
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        appTitle = new javax.swing.JLabel();
        quit = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        songName = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        play = new javax.swing.JLabel();
        pause = new javax.swing.JLabel();
        stop = new javax.swing.JLabel();
        open = new javax.swing.JLabel();
        loop = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jSlider1 = new javax.swing.JSlider();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(600, 400));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));

        jPanel2.setBackground(new java.awt.Color(255, 255, 0));

        appTitle.setBackground(new java.awt.Color(255, 255, 255));
        appTitle.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        appTitle.setText("                                                      MP3 Player");
        appTitle.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                appTitleMouseDragged(evt);
            }
        });
        appTitle.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                appTitleMousePressed(evt);
            }
        });

        quit.setBackground(new java.awt.Color(0, 0, 0));
        quit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/musicplayer/music player icon/quit.png"))); // NOI18N
        quit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quitMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(appTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(quit, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(appTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(quit, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 102));

        songName.setBackground(new java.awt.Color(0, 0, 0));
        songName.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        songName.setText("                                                                      Playing");
        songName.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                songNameMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(songName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(songName, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 204));

        play.setBackground(new java.awt.Color(0, 0, 0));
        play.setIcon(new javax.swing.ImageIcon(getClass().getResource("/musicplayer/music player icon/play.png"))); // NOI18N
        play.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                playMouseClicked(evt);
            }
        });

        pause.setBackground(new java.awt.Color(0, 0, 0));
        pause.setIcon(new javax.swing.ImageIcon(getClass().getResource("/musicplayer/music player icon/pause.png"))); // NOI18N
        pause.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pauseMouseClicked(evt);
            }
        });

        stop.setBackground(new java.awt.Color(0, 0, 0));
        stop.setIcon(new javax.swing.ImageIcon(getClass().getResource("/musicplayer/music player icon/stop.png"))); // NOI18N
        stop.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                stopMouseClicked(evt);
            }
        });

        open.setBackground(new java.awt.Color(0, 0, 0));
        open.setIcon(new javax.swing.ImageIcon(getClass().getResource("/musicplayer/music player icon/open.png"))); // NOI18N
        open.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                openMouseClicked(evt);
            }
        });

        loop.setBackground(new java.awt.Color(0, 0, 0));
        loop.setIcon(new javax.swing.ImageIcon(getClass().getResource("/musicplayer/music player icon/repeat.png"))); // NOI18N
        loop.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                loopMouseClicked(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/musicplayer/music player icon/volume_down.png"))); // NOI18N
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/musicplayer/music player icon/volume_up.png"))); // NOI18N
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });

        jSlider1.setValue(40);
        jSlider1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider1StateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(81, 81, 81)
                .addComponent(pause)
                .addGap(42, 42, 42)
                .addComponent(play)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 123, Short.MAX_VALUE)
                .addComponent(stop)
                .addGap(66, 66, 66))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addComponent(loop, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(open))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(open)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(loop, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(pause)
                        .addGap(32, 32, 32))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(play)
                        .addGap(20, 20, 20))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(stop)
                        .addGap(33, 33, 33))))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void playMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_playMouseClicked
            player.play();
        // TODO add your handling code here:
    }//GEN-LAST:event_playMouseClicked

    private void stopMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stopMouseClicked
        player.stop();        // TODO add your handling code here:
    }//GEN-LAST:event_stopMouseClicked

    private void pauseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pauseMouseClicked
        player.pause();        // TODO add your handling code here:
    }//GEN-LAST:event_pauseMouseClicked

    private void loopMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loopMouseClicked
        // TODO add your handling code here:
        if(repeat==false)
        {
            repeat=true;
            player.setRepeat(repeat);
            
            
           String image=currentPath+imagePath+"\\repeat_enabled.png";
//            System.out.println(image);
//            System.out.println("C:\\Users\\Kshitij Kumar\\Documents\\NetBeansProjects\\MusicPlayer\\src\\musicplayer\\music player icon");
           loop.setIcon(new ImageIcon(image));
            
        }
        else if(repeat==true)
        {
            repeat=false;
            player.setRepeat(repeat);
             String image=currentPath+imagePath+"\\repeat.png";
           loop.setIcon(new ImageIcon(image));
        }
        
        
    }//GEN-LAST:event_loopMouseClicked

    private void appTitleMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_appTitleMousePressed
        // TODO add your handling code here:
        
        xMouse=evt.getX();//changed by how much
        yMouse=evt.getY();
    }//GEN-LAST:event_appTitleMousePressed

    private void appTitleMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_appTitleMouseDragged
        // TODO add your handling code here:
        int x=evt.getXOnScreen();
        int y=evt.getYOnScreen();
        this.setLocation(x-xMouse, y-yMouse);
    }//GEN-LAST:event_appTitleMouseDragged

    private void quitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quitMouseClicked

        Integer slider=(Integer)jSlider1.getValue();
    String filename="file.ser";
           try
        {    
            //Saving of object in a file 
            FileOutputStream file = new FileOutputStream(filename); 
            ObjectOutputStream out = new ObjectOutputStream(file); 
              
            // Method for serialization of object 
            out.writeObject(slider); 
              
            out.close(); 
            file.close(); 
              
            System.out.println("Object has been serialized"); 
  
        } 
          
        catch(IOException ex) 
        { 
            System.out.println("IOException is caught"); 
        } 
          
        
        this.dispose();
    }//GEN-LAST:event_quitMouseClicked

    private void openMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_openMouseClicked
JFileChooser openfileChooser =new JFileChooser(currentDir);
openfileChooser.setFileFilter(new FiletypeFilter(".mp3","Open MP3 files"));
int result=openfileChooser.showOpenDialog(null);
if(result==JFileChooser.APPROVE_OPTION);
    songFile=openfileChooser.getSelectedFile();
    player.addToPlayList(songFile);
    player.skipForward();
    currentDir=songFile.getAbsolutePath();
    songName.setText("Playing ......"+songFile.getName());
    


        // TODO add your handling code here:
    }//GEN-LAST:event_openMouseClicked

    private void songNameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_songNameMouseClicked
      if(evt.getClickCount()==2)
      {
          if(windowCollapsed==false)
          {
              windowCollapsed=true;
              this.setSize(new Dimension(this.getSize().width,100));
            
              appTitle.setFont(new Font("Nirmala UI",0,12));
              appTitle.setText("Playing Now........"+songFile.getName());
              
              
          }
          else if(windowCollapsed==true)
          {
               windowCollapsed=false;
              this.setSize(new Dimension(this.getSize().width,500));
            
              appTitle.setFont(new Font("Nirmala UI",0,18));
              appTitle.setText(songFile.getName());
              appTitle.setText(appName);
              
          }
      }
        // TODO add your handling code here:
    }//GEN-LAST:event_songNameMouseClicked

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
//volumeUpControl(0.1);
 int p=jSlider1.getValue();
        jSlider1.setValue(p+10);
// TODO add your handling code here:
    }//GEN-LAST:event_jLabel2MouseClicked

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        // TODO add your handling code here:
        int p=jSlider1.getValue();
        jSlider1.setValue(p-10);
        //volumeDownControl(0.1);
    }//GEN-LAST:event_jLabel1MouseClicked

    private void jSlider1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider1StateChanged
JSlider slider=(JSlider) evt.getSource();
double vol=slider.getValue();
        //System.out.println(vol);
vol=vol/100;
volumeControl(vol);


        // TODO add your handling code here:
    }//GEN-LAST:event_jSlider1StateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mp3player.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mp3player.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mp3player.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mp3player.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new mp3player().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel appTitle;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JLabel loop;
    private javax.swing.JLabel open;
    private javax.swing.JLabel pause;
    private javax.swing.JLabel play;
    private javax.swing.JLabel quit;
    private javax.swing.JLabel songName;
    private javax.swing.JLabel stop;
    // End of variables declaration//GEN-END:variables
private MP3Player mp3Player()
{
    MP3Player mp3Player=new MP3Player();
    return mp3Player;
}
private void volumeDownControl(Double valueminus)
{
    Mixer.Info[] mixers=AudioSystem.getMixerInfo();//mixer info from audio system
    for(Mixer.Info mixerInfo:mixers)
    {
        Mixer mixer=AudioSystem.getMixer(mixerInfo);
        Line.Info[] lineInfos=mixer.getTargetLineInfo();//get target line
        for(Line.Info  lineInfo:lineInfos)
        {
            Line line=null;
            boolean opened=true;
            try{
            line=mixer.getLine(lineInfo);
            opened=line.isOpen()  || line instanceof Clip;
            if(!opened)
            {
                //opening the line
                line.open();
                
            }
            //make a float controller
            FloatControl volControl=(FloatControl) line.getControl(FloatControl.Type.VOLUME);
            //get current volume
            float currentVolume=volControl.getValue();//current volume value
            Double volumeToCut=valueminus;
            float changedcalc=(float)((float)currentVolume-(double)volumeToCut);
            volControl.setValue(changedcalc);
            
            
            }
            catch(LineUnavailableException lineExec)
            {   
            }
            catch(IllegalArgumentException illExce){
            }
            finally{//closing the line
                if(line!=null&& !opened)
                    line.close();
            }
            
            
        }
        
    }
}

private void volumeUpControl(Double valueminus)
{
    Mixer.Info[] mixers=AudioSystem.getMixerInfo();//mixer info from audio system
    for(Mixer.Info mixerInfo:mixers)
    {
        Mixer mixer=AudioSystem.getMixer(mixerInfo);
        Line.Info[] lineInfos=mixer.getTargetLineInfo();//get target line
        for(Line.Info  lineInfo:lineInfos)
        {
            Line line=null;
            boolean opened=true;
            try{
            line=mixer.getLine(lineInfo);
            opened=line.isOpen()  || line instanceof Clip;
            if(!opened)
            {
                //opening the line
                line.open();
                
            }
            //make a float controller
            FloatControl volControl=(FloatControl) line.getControl(FloatControl.Type.VOLUME);
            //get current volume
            float currentVolume=volControl.getValue();//current volume value
            Double volumeToCut=valueminus;
            float changedcalc=(float)((float)currentVolume+(double)volumeToCut);
            volControl.setValue(changedcalc);
            
            
            }
            catch(LineUnavailableException lineExec)
            {   
            }
            catch(IllegalArgumentException illExce){
            }
            finally{//closing the line
                if(line!=null&& !opened)
                    line.close();
            }
            
            
        }
        
    }
}


private void volumeControl(Double valueminus)
{
    Mixer.Info[] mixers=AudioSystem.getMixerInfo();//mixer info from audio system
    for(Mixer.Info mixerInfo:mixers)
    {
        Mixer mixer=AudioSystem.getMixer(mixerInfo);
        Line.Info[] lineInfos=mixer.getTargetLineInfo();//get target line
        for(Line.Info  lineInfo:lineInfos)
        {
            Line line=null;
            boolean opened=true;
            try{
            line=mixer.getLine(lineInfo);
            opened=line.isOpen()  || line instanceof Clip;
            if(!opened)
            {
                //opening the line
                line.open();
                
            }
            //make a float controller
            FloatControl volControl=(FloatControl) line.getControl(FloatControl.Type.VOLUME);
            //get current volume
            float currentVolume=volControl.getValue();//current volume value
            Double volumeToCut=valueminus;
            float changedcalc=(float)((double)volumeToCut);
            volControl.setValue(changedcalc);
            
            
            }
            catch(LineUnavailableException lineExec)
            {   
            }
            catch(IllegalArgumentException illExce){
            }
            finally{//closing the line
                if(line!=null&& !opened)
                    line.close();
            }
            
            
        }
        
    }
}

}
